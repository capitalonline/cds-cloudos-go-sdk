// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go
//
// Generated by this command:
//
//	mockgen -source=./client.go -destination=./mock.go -package=ecs
//

// Package ecs is a generated GoMock package.
package ecs

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
	isgomock struct{}
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ChangeInstanceConfigure mocks base method.
func (m *MockClient) ChangeInstanceConfigure(arg0 *ChangeInstanceConfigureReq) (*ChangeInstanceConfigureResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeInstanceConfigure", arg0)
	ret0, _ := ret[0].(*ChangeInstanceConfigureResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeInstanceConfigure indicates an expected call of ChangeInstanceConfigure.
func (mr *MockClientMockRecorder) ChangeInstanceConfigure(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeInstanceConfigure", reflect.TypeOf((*MockClient)(nil).ChangeInstanceConfigure), arg0)
}

// CreateInstance mocks base method.
func (m *MockClient) CreateInstance(arg0 *CreateInstanceReq) (*CreateInstanceResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInstance", arg0)
	ret0, _ := ret[0].(*CreateInstanceResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInstance indicates an expected call of CreateInstance.
func (mr *MockClientMockRecorder) CreateInstance(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstance", reflect.TypeOf((*MockClient)(nil).CreateInstance), arg0)
}

// DescribeEcsFamilyInfo mocks base method.
func (m *MockClient) DescribeEcsFamilyInfo(arg0 *DescribeEcsFamilyInfoReq) (*DescribeEcsFamilyInfoResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEcsFamilyInfo", arg0)
	ret0, _ := ret[0].(*DescribeEcsFamilyInfoResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEcsFamilyInfo indicates an expected call of DescribeEcsFamilyInfo.
func (mr *MockClientMockRecorder) DescribeEcsFamilyInfo(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEcsFamilyInfo", reflect.TypeOf((*MockClient)(nil).DescribeEcsFamilyInfo), arg0)
}

// DescribeImages mocks base method.
func (m *MockClient) DescribeImages(arg0 *DescribeImagesReq) (*DescribeImagesResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeImages", arg0)
	ret0, _ := ret[0].(*DescribeImagesResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeImages indicates an expected call of DescribeImages.
func (mr *MockClientMockRecorder) DescribeImages(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeImages", reflect.TypeOf((*MockClient)(nil).DescribeImages), arg0)
}

// DescribeInstance mocks base method.
func (m *MockClient) DescribeInstance(arg0 *DescribeInstanceReq) (*DescribeInstanceResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstance", arg0)
	ret0, _ := ret[0].(*DescribeInstanceResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstance indicates an expected call of DescribeInstance.
func (mr *MockClientMockRecorder) DescribeInstance(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstance", reflect.TypeOf((*MockClient)(nil).DescribeInstance), arg0)
}

// DescribeInstanceList mocks base method.
func (m *MockClient) DescribeInstanceList(arg0 *DescribeInstanceListReq) (*DescribeInstanceListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstanceList", arg0)
	ret0, _ := ret[0].(*DescribeInstanceListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstanceList indicates an expected call of DescribeInstanceList.
func (mr *MockClientMockRecorder) DescribeInstanceList(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstanceList", reflect.TypeOf((*MockClient)(nil).DescribeInstanceList), arg0)
}

// DescribeRegions mocks base method.
func (m *MockClient) DescribeRegions() (*DescribeRegionsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRegions")
	ret0, _ := ret[0].(*DescribeRegionsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRegions indicates an expected call of DescribeRegions.
func (mr *MockClientMockRecorder) DescribeRegions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRegions", reflect.TypeOf((*MockClient)(nil).DescribeRegions))
}

// DescribeTaskEvent mocks base method.
func (m *MockClient) DescribeTaskEvent(arg0 *DescribeTaskEventReq) (*DescribeTaskEventResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeTaskEvent", arg0)
	ret0, _ := ret[0].(*DescribeTaskEventResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTaskEvent indicates an expected call of DescribeTaskEvent.
func (mr *MockClientMockRecorder) DescribeTaskEvent(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTaskEvent", reflect.TypeOf((*MockClient)(nil).DescribeTaskEvent), arg0)
}

// ExtendDisk mocks base method.
func (m *MockClient) ExtendDisk(arg0 *ExtendDiskReq) (*ExtendDiskResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtendDisk", arg0)
	ret0, _ := ret[0].(*ExtendDiskResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtendDisk indicates an expected call of ExtendDisk.
func (mr *MockClientMockRecorder) ExtendDisk(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtendDisk", reflect.TypeOf((*MockClient)(nil).ExtendDisk), arg0)
}

// ModifyInstanceName mocks base method.
func (m *MockClient) ModifyInstanceName(arg0 *ModifyInstanceNameReq) (*ModifyInstanceNameResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModifyInstanceName", arg0)
	ret0, _ := ret[0].(*ModifyInstanceNameResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModifyInstanceName indicates an expected call of ModifyInstanceName.
func (mr *MockClientMockRecorder) ModifyInstanceName(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModifyInstanceName", reflect.TypeOf((*MockClient)(nil).ModifyInstanceName), arg0)
}

// OperateInstance mocks base method.
func (m *MockClient) OperateInstance(arg0 *OperateInstanceReq) (*OperateInstanceResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OperateInstance", arg0)
	ret0, _ := ret[0].(*OperateInstanceResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OperateInstance indicates an expected call of OperateInstance.
func (mr *MockClientMockRecorder) OperateInstance(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OperateInstance", reflect.TypeOf((*MockClient)(nil).OperateInstance), arg0)
}
